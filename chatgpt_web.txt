
<core program>

import openai
openai.api_key = "MY_KEY"

def generate_text(prompt, conversation_history=""):
    response = openai.Completion.create(
        engine = "text-davinci-003",
        prompt = f"{conversation_history}{prompt}",
        max_tokens = 3900,
        n = 1,
        stop = None,
        temperature = 0,
    )
    return response.choices[0].text.strip()

# Start the conversation
conversation_history = ""
while True:
    user_input = input("You: ")
    if user_input.lower() in ['quit', 'exit', 'stop']:
        break
    conversation_history += f"You: {user_input}\nAI: "
    generated_response = generate_text(user_input, conversation_history)
    print("AI: " + generated_response)
    conversation_history += generated_response + "\n"

#############################################################

flask-chatbot/
├── app.py
├── openai_key.txt
└── templates/
    └── index.html

######################################################

<app.py>

from flask import Flask, render_template, request, jsonify
import openai

# Load OpenAI API key from a file
with open("openai_key.txt", "r") as f:
    openai.api_key = f.read().strip()

# Initialize Flask application
app = Flask(__name__)

# Render the index.html template when the root URL is accessed
@app.route("/")
def index():
    return render_template("index.html")

# Handle POST requests to the /chat API endpoint
@app.route("/chat", methods=["POST"])
def chat():
    # Get user message from the request body
    user_message = request.json["message"]

    # Generate response from OpenAI API
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=user_message,
        max_tokens=1024,
        n=1,
        stop=None,
        temperature=0.7,
    )

    # Extract the AI's response from the API response
    ai_response = response.choices[0].text.strip()

    # Return the AI's response as a JSON object
    return jsonify({"message": ai_response})

if __name__ == "__main__":
    app.run(debug=True)

#######################################################


<!DOCTYPE html>
<html>
<head>
    <title>Chat with ChatGPT</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>Chat with ChatGPT</h1>
    <div id="chat-log"></div>
    <form id="chat-form">
        <input type="text" id="user-message" placeholder="Enter your message...">
        <input type="submit" value="Send">
    </form>

    <script>
        $(function() {
            // Listen for form submission
            $("#chat-form").submit(function(event) {
                event.preventDefault();

                // Get user message from input field
                var userMessage = $("#user-message").val().trim();

                // If message is empty, do nothing
                if (!userMessage) {
                    return;
                }

                // Append user message to chat log
                var chatLog = $("#chat-log");
                chatLog.append("<p>You: " + userMessage + "</p>");

                // Clear input field
                $("#user-message").val("");

                // Send AJAX request to chat API
                $.ajax({
                    url: "/chat",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({"message": userMessage}),
                    success: function(response) {
                        // Append AI's response to chat log
                        chatLog.append("<p>ChatGPT: " + response.message + "</p>");
                    },
                    error: function() {
                        // Handle error
                        chatLog.append("<p>ChatGPT: Sorry, I couldn't understand that.</p>");
                    }
                });
            });
        });
    </script>
</body>
</html>

###########################################################


flask-chatbot/
├── app/
│   ├── __init__.py
│   ├── chatbot.py
│   ├── chatgpt.py
│   └── templates/
│       └── index.html
├── config.py
├── requirements.txt
└── run.py

##################################################

<__init__.py>

from flask import Flask

def create_app():
    app = Flask(__name__)

    # Load configuration from config.py
    app.config.from_pyfile('config.py')

    # Register blueprints
    from app.chatbot import chatbot_bp
    app.register_blueprint(chatbot_bp)

    return app


<chatbot.py>


from flask import Blueprint, render_template, request
from .chatgpt import generate_response

chatbot_bp = Blueprint('chatbot', __name__)

@chatbot_bp.route('/', methods=['GET', 'POST'])
def chat():
    if request.method == 'POST':
        user_input = request.form['user_input']
        bot_response = generate_response(user_input)
        return {'response': bot_response}
    return render_template('index.html')


<chatgpt.py>

import openai
import os

openai.api_key = open('openai_key.txt', 'r').readline().strip()

def generate_response(prompt):
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt,
        max_tokens=1024,
        n=1,
        stop=None,
        temperature=0.5,
    )
    return response.choices[0].text.strip()


<config.py>

import os

class Config:
    SECRET_KEY = os.environ.get('SECRET_KEY') or 'my-secret-key'
    OPENAI_API_KEY = open('openai_key.txt').read().strip()



<run.py>

from app import create_app

app = create_app()

if __name__ == '__main__':
    app.run(debug=True)


##########################################################

<!DOCTYPE html>
<html>
<head>
    <title>OpenAI GPT Chatbot</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function send_message() {
            var user_input = $("#user_input").val();
            if (user_input.trim().length == 0) {
                return;
            }
            $("#chat_log").append("<p class='user_message'>" + user_input + "</p>");
            $("#user_input").val("");
            $.ajax({
                url: "/chatbot",
                type: "POST",
                data: {"user_input": user_input},
                dataType: "json",
                success: function(response) {
                    var bot_response = response.response;
                    $("#chat_log").append("<p class='bot_message'>" + bot_response + "</p>");
                    $("#chat_log").scrollTop($("#chat_log")[0].scrollHeight);
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        }
        $(document).ready(function() {
            $("#user_input").keypress(function(event) {
                if (event.which == 13) {
                    event.preventDefault();
                    send_message();
                }
            });
        });
    </script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        #chat_log {
            width: 100%;
            height: 400px;
            border: 1px solid #ccc;
            overflow-y: scroll;
            padding: 10px;
        }
        .user_message {
            margin: 10px;
            padding: 10px;
            background-color: #f0f0f0;
            border-radius: 10px;
            float: left;
            clear: both;
            max-width: 60%;
        }
        .bot_message {
            margin: 10px;
            padding: 10px;
            background-color: #cee6ff;
            border-radius: 10px;
            float: right;
            clear: both;
            max-width: 60%;
        }
        #user_input {
            width: 100%;
            margin-top: 10px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-sizing: border-box;
            font-size: 16px;
            resize: none;
        }
    </style>
</head>
<body>
    <h1>OpenAI GPT Chatbot</h1>
    <div id="chat_log"></div>
    <textarea id="user_input" placeholder="Type your message here..."></textarea>
    <button onclick="send_message()">Send</button>
</body>
</html>


#################################################
